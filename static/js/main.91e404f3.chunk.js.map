{"version":3,"sources":["Forminput.js","App.js","reportWebVitals.js","index.js"],"names":["Forminput","useState","validated","setValidated","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","Row","Group","as","Col","md","controlId","Label","Control","required","type","placeholder","defaultValue","Feedback","InputGroup","hasValidation","Prepend","Text","id","aria-describedby","Check","label","feedback","Button","App","className","variant","class","varinat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91e404f3.chunk.js","sourcesContent":["import React,{useState} from 'react'\n\nimport { Button, Form ,Col,InputGroup} from \"react-bootstrap\";\n\n\n\nfunction Forminput() {\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  return (\n    \n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      \n      <Form.Row>\n        <Form.Group as={Col} md=\"7\" controlId=\"validationCustom01\">\n          <Form.Label></Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"First name\"\n            defaultValue=\"\"\n          />\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"7\" controlId=\"validationCustom02\">\n          <Form.Label></Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Last name\"\n            defaultValue=\"\"\n          />\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"7\" controlId=\"validationCustomUsername\">\n          <Form.Label></Form.Label>\n          <InputGroup hasValidation>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Username\"\n              aria-describedby=\"inputGroupPrepend\"\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please choose a username.\n            </Form.Control.Feedback>\n          </InputGroup>\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Form.Group as={Col} md=\"7\" controlId=\"validationCustom03\">\n          <Form.Label></Form.Label>\n          <Form.Control type=\"text\" placeholder=\"City\" required />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid city.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom04\">\n          <Form.Label></Form.Label>\n          <Form.Control type=\"text\" placeholder=\"State\" required />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid state.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom05\">\n          <Form.Label></Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Zip\" required />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid zip.\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Form.Row>\n      <Form.Group>\n        <Form.Check\n          required\n          label=\"Agree to terms and conditions\"\n          feedback=\"You must agree before submitting.\"\n        />\n      </Form.Group>\n     \n      <Button  type=\"submit\">Submit form</Button>\n    </Form>\n  );\n}\n\nexport default Forminput","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button,Form } from \"react-bootstrap\";\nimport Forminput from \"./Forminput\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n   <header className=\"App-header\">\n\n       <h2>Sign up </h2>\n        <Forminput/>\n       <hr/>\n       <h2>Sign in</h2> \n       <hr/>\n        <Form >\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"example@email.com\" />\n            <Form.Text className=\"text-muted\">\n              Please enter your email address.\n            </Form.Text>\n          </Form.Group>\n         \n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Password\" />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicCheckbox\">\n            <Form.Check type=\"checkbox\" label=\"Check me out\" />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n         \n          \n        </Form>\n      </header>\n      <hr/>\n      <h1>Colors</h1>\n      <div class=\"p-3 mb-2 bg-primary text-white\">.bg-primary</div>\n<div class=\"p-3 mb-2 bg-secondary text-white\">.bg-secondary</div>\n<div class=\"p-3 mb-2 bg-success text-white\">.bg-success</div>\n<div class=\"p-3 mb-2 bg-danger text-white\">.bg-danger</div>\n<div class=\"p-3 mb-2 bg-warning text-dark\">.bg-warning</div>\n<div class=\"p-3 mb-2 bg-info text-white\">.bg-info</div>\n<div class=\"p-3 mb-2 bg-light text-dark\">.bg-light</div>\n<div class=\"p-3 mb-2 bg-dark text-white\">.bg-dark</div>\n<div class=\"p-3 mb-2 bg-white text-dark\">.bg-white</div>\n<div class=\"p-3 mb-2 bg-transparent text-dark\">.bg-transparent</div>\n<hr/>\n<h2>Button Colors</h2>\n      <Button variant=\"primary\">Primary </Button>\n      <br />\n      <br />\n      <Button variant=\"secondary\">Secondary</Button>\n      <br />\n      <br />\n      <Button variant=\"success\">Success</Button>\n      <br />\n      <br />\n      <Button variant=\"danger\"> Danger</Button>\n      <br />\n      <br />\n      <Button variant=\"warning\">  Warning</Button>\n      <br />\n      <br />\n      <Button varinat=\"info\">  Info </Button>\n      <br />\n      <br />\n      <Button variant=\"light\">  Light</Button>\n      <br />\n      <br />\n      <Button variant=\"dark\"> Dark</Button>\n      <br />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}